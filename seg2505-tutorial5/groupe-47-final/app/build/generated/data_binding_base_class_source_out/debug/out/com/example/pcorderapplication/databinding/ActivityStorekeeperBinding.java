// Generated by view binder compiler. Do not edit!
package com.example.pcorderapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pcorderapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStorekeeperBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAdd;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final Button buttonModify;

  @NonNull
  public final LinearLayout buttonsLayout;

  @NonNull
  public final CardView cardComment;

  @NonNull
  public final CardView cardQuantity;

  @NonNull
  public final CardView cardSubtype;

  @NonNull
  public final CardView cardTitle;

  @NonNull
  public final CardView cardtype;

  @NonNull
  public final EditText editTextComment;

  @NonNull
  public final EditText editTextQuantity;

  @NonNull
  public final EditText editTextSubtype;

  @NonNull
  public final EditText editTextTitle;

  @NonNull
  public final EditText editTextType;

  @NonNull
  public final ImageView goBackArrow;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ListView listViewComponents;

  @NonNull
  public final TextView textViewExistingComponents;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final View viewSeparator;

  private ActivityStorekeeperBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAdd,
      @NonNull Button buttonDelete, @NonNull Button buttonModify,
      @NonNull LinearLayout buttonsLayout, @NonNull CardView cardComment,
      @NonNull CardView cardQuantity, @NonNull CardView cardSubtype, @NonNull CardView cardTitle,
      @NonNull CardView cardtype, @NonNull EditText editTextComment,
      @NonNull EditText editTextQuantity, @NonNull EditText editTextSubtype,
      @NonNull EditText editTextTitle, @NonNull EditText editTextType,
      @NonNull ImageView goBackArrow, @NonNull Guideline guideline,
      @NonNull ListView listViewComponents, @NonNull TextView textViewExistingComponents,
      @NonNull TextView textViewTitle, @NonNull View viewSeparator) {
    this.rootView = rootView;
    this.buttonAdd = buttonAdd;
    this.buttonDelete = buttonDelete;
    this.buttonModify = buttonModify;
    this.buttonsLayout = buttonsLayout;
    this.cardComment = cardComment;
    this.cardQuantity = cardQuantity;
    this.cardSubtype = cardSubtype;
    this.cardTitle = cardTitle;
    this.cardtype = cardtype;
    this.editTextComment = editTextComment;
    this.editTextQuantity = editTextQuantity;
    this.editTextSubtype = editTextSubtype;
    this.editTextTitle = editTextTitle;
    this.editTextType = editTextType;
    this.goBackArrow = goBackArrow;
    this.guideline = guideline;
    this.listViewComponents = listViewComponents;
    this.textViewExistingComponents = textViewExistingComponents;
    this.textViewTitle = textViewTitle;
    this.viewSeparator = viewSeparator;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStorekeeperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStorekeeperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_storekeeper, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStorekeeperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAdd;
      Button buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.buttonDelete;
      Button buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonModify;
      Button buttonModify = ViewBindings.findChildViewById(rootView, id);
      if (buttonModify == null) {
        break missingId;
      }

      id = R.id.buttonsLayout;
      LinearLayout buttonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonsLayout == null) {
        break missingId;
      }

      id = R.id.cardComment;
      CardView cardComment = ViewBindings.findChildViewById(rootView, id);
      if (cardComment == null) {
        break missingId;
      }

      id = R.id.cardQuantity;
      CardView cardQuantity = ViewBindings.findChildViewById(rootView, id);
      if (cardQuantity == null) {
        break missingId;
      }

      id = R.id.cardSubtype;
      CardView cardSubtype = ViewBindings.findChildViewById(rootView, id);
      if (cardSubtype == null) {
        break missingId;
      }

      id = R.id.cardTitle;
      CardView cardTitle = ViewBindings.findChildViewById(rootView, id);
      if (cardTitle == null) {
        break missingId;
      }

      id = R.id.cardtype;
      CardView cardtype = ViewBindings.findChildViewById(rootView, id);
      if (cardtype == null) {
        break missingId;
      }

      id = R.id.editTextComment;
      EditText editTextComment = ViewBindings.findChildViewById(rootView, id);
      if (editTextComment == null) {
        break missingId;
      }

      id = R.id.editTextQuantity;
      EditText editTextQuantity = ViewBindings.findChildViewById(rootView, id);
      if (editTextQuantity == null) {
        break missingId;
      }

      id = R.id.editTextSubtype;
      EditText editTextSubtype = ViewBindings.findChildViewById(rootView, id);
      if (editTextSubtype == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      EditText editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.editTextType;
      EditText editTextType = ViewBindings.findChildViewById(rootView, id);
      if (editTextType == null) {
        break missingId;
      }

      id = R.id.goBackArrow;
      ImageView goBackArrow = ViewBindings.findChildViewById(rootView, id);
      if (goBackArrow == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.listViewComponents;
      ListView listViewComponents = ViewBindings.findChildViewById(rootView, id);
      if (listViewComponents == null) {
        break missingId;
      }

      id = R.id.textViewExistingComponents;
      TextView textViewExistingComponents = ViewBindings.findChildViewById(rootView, id);
      if (textViewExistingComponents == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.viewSeparator;
      View viewSeparator = ViewBindings.findChildViewById(rootView, id);
      if (viewSeparator == null) {
        break missingId;
      }

      return new ActivityStorekeeperBinding((ConstraintLayout) rootView, buttonAdd, buttonDelete,
          buttonModify, buttonsLayout, cardComment, cardQuantity, cardSubtype, cardTitle, cardtype,
          editTextComment, editTextQuantity, editTextSubtype, editTextTitle, editTextType,
          goBackArrow, guideline, listViewComponents, textViewExistingComponents, textViewTitle,
          viewSeparator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
